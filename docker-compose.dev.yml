version: '3.8'

services:
  postgres:
    container_name: postgres
    image: postgres
    restart: always
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    ports:
      - ${DB_PORT}:${DB_PORT}
    volumes:
      - vol_postgres:/var/lib/postgresql/data
  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq
    restart: always
    ports:
      - ${RABBITMQ_PORT}:${RABBITMQ_PORT}
    volumes:
      - vol_rabbitmq:/var/lib/rabbitmq
  redis:
    container_name: redis
    image: redis
    restart: always
    command: redis-server --requirepass ${REDIS_PASSWORD}
    ports:
      - ${REDIS_PORT}:${REDIS_PORT}
    volumes:
      - vol_redis:/data
  auth:
    container_name: auth
    build:
      context: .
      dockerfile: ./apps/auth/Dockerfile
      target: development
    command: pnpm auth:dev
    ports:
      - ${APP_PORT_AUTH}:${APP_PORT_AUTH}
    env_file:
      - .env
    depends_on:
      - postgres
      - rabbitmq
      - redis
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
  mail:
    container_name: mail
    build:
      context: .
      dockerfile: ./apps/mail/Dockerfile
      target: development
    command: pnpm mail:dev
    ports:
      - ${APP_PORT_MAIL}:${APP_PORT_MAIL}
    env_file:
      - .env
    depends_on:
      - postgres
      - rabbitmq
      - auth
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
  shop:
    container_name: shop
    build:
      context: .
      dockerfile: ./apps/shop/Dockerfile
      target: development
    command: pnpm shop:dev
    ports:
      - ${APP_PORT_SHOP}:${APP_PORT_SHOP}
    env_file:
      - .env
    depends_on:
      - postgres
      - rabbitmq
      - auth
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
volumes:
  vol_postgres:
    driver: local
  vol_redis:
    driver: local
  vol_rabbitmq:
