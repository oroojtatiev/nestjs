version: '3.8'

services:
  postgres:
    image: postgres
    restart: always
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    container_name: postgres-db
    ports:
      - "5432:5432"
    volumes:
      - data-postgres:/var/lib/postgresql/data
    networks:
      default:
      outside:
        ipv4_address: 192.168.220.220
  nestjs:
    build:
      context: .
      dockerfile: ./Dockerfile
      target: ${NODE_ENV}
    image: oruj91/nestjs-graphql
    environment:
      - APP_PORT=${APP_PORT}
      - DB_TYPE=${DB_TYPE}
      - DB_PORT=${DB_PORT}
      - DB_HOST=postgres
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_SYNC=${DB_SYNC}
      - JWT_SECRET=${AUTH_JWT_SECRET}
      - JWT_TOKEN_EXPIRES=${AUTH_JWT_TOKEN_EXPIRES}
    ports:
      - "3000:3000"
    container_name: nestjs-app
    depends_on:
      - postgres
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    command: pnpm start:dev
  pgadmin:
    image: dpage/pgadmin4
    restart: always
    container_name: pgadmin4
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}
      - PGADMIN_LISTEN_PORT=${PGADMIN_LISTEN_PORT}
    ports:
      - "8080:80"
    volumes:
      - data-pgadmin:/var/lib/pgadmin
    depends_on:
      - postgres
    networks:
      - default
volumes:
  data-postgres:
  data-pgadmin:
networks:
  outside:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 192.168.220.0/24
